#summary The list of all the components currently in FlexLib.
= FlexLib component list =

This wiki page contains a list of all components contained in the current build of flexlib. After adding new components to FlexLib, you should edit this page and include a short summary of the component and the links to the ASDoc documentation and the sample SWF file, if available. Include the names of contributors for each component.

== package: flexlib.controls ==

==== Base64Image ====
An image component that renders base-64 encoded images.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/controls/Base64Image.html Documentation] | [http://flexlib.googlecode.com/svn/trunk/examples/Base64Image_Sample.swf Example] | Contributor: Stacy Young

==== CanvasButton ====
The !CanvasButton is an extension of Button that lets you set the contents of the Button to any UI components, as opposed to only a single icon and label like the normal Button control allows.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/containers/accordionClasses/CanvasButtonAccordionHeader.html Documentation] | [http://flexlib.googlecode.com/svn/trunk/examples/CanvasButton_Sample.swf Example] | Contributor: Doug !McCune

==== CanvasButtonAccordionHeader ====
The !CanvasButtonAccordionHeader allows you to use a CanvasButton component as the header renderer of an Accordion, meaning you have full control over the header renderer and can add additional UI control, etc.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/controls/CanvasButtonAccordionHeader.html Documentation] | [http://flexlib.googlecode.com/svn/trunk/examples/CanvasButtonAccordionHeader_Sample.swf Example] | Contributor: Doug !McCune

==== ConvertibleTreeList ====
A control that combines the functionality of the Tree component and the List component.
The !ConvertibleTreeList allows you to use one control and have it display the dataProvider either as a Tree or as a List. You only have to set the dataProvider once. You can set the *mode* at any time to change the display mode.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/controls/ConvertibleTreeList.html Documentation] | [http://flexlib.googlecode.com/svn/trunk/examples/ConvertibleTreeList_Sample.swf Example] | Contributor: Doug !McCune

==== Fire ====
A component to produce a simulated fire effect.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/controls/Fire.html Documentation] | [http://flexlib.googlecode.com/svn/trunk/examples/Fire_Sample.swf Example] | Contributor: Doug !McCune

==== Highlighter ====
A component to highlight selected words or phrases within a text control

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/controls/Highlighter.html Documentation] | [http://flexlib.googlecode.com/svn/trunk/examples/Highlighter_Sample.swf Example] | Contributor: Tom Lee

==== HSlider and VSlider ====
Alternatives to the HSlider and VSlider controls included in the Flex framework. This version of the HSlider and VSlider allows you to drag the region between the thumbs, if the slider has mutliple thumbs. If there is more than one thumb then the region between the leftmost thumb and the rightmost thumb is draggable.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/controls/HSlider.html Documentation] | [http://flexlib.googlecode.com/svn/trunk/examples/Slider_Sample.swf Example] | Contributor: Doug !McCune

==== IconLoader ====
The !IconLoader component converts a Macintosh OS X (.icns) or Windows XP (.ico) icon file, along with its alpha mask, to a Flex 2 UIComponent.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/controls/IconLoader.html Documentation] | [http://flexlib.googlecode.com/svn/trunk/examples/IconLoader_Sample.swf Example] | Contributor: Tobias Patton
 
==== ImageMap ====
The !ImageMap control is an implementation of a client-side image map component, like it is supported in HTML.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/controls/ImageMap.html Documentation] | [http://flexlib.googlecode.com/svn/trunk/examples/ImageMap_Sample.swf Example] | Contributor: Doug !McCune

==== PromptingTextInput ====
The !PromptingTextInput component is a small enhancement to standard !TextInput.  It adds the ability to specify a prompt value that displays when the text is empty, similar to how the prompt property of the !ComboBox behaves when there is no selected value.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/controls/PromptingTextInput.html Documentation] | [http://flexlib.googlecode.com/svn/trunk/examples/PromptingTextInput_Sample.swf Example] | Contributor: Darron Schall

==== PromptingTextArea ====
The !PromptingTextArea component is a small enhancement to standard !TextArea.  It adds the ability to specify a prompt value that displays when the text is empty, similar to how the prompt property of the !ComboBox behaves when there is no selected value.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/controls/PromptingTextArea.html Documentation] | [http://flexlib.googlecode.com/svn/trunk/examples/PromptingTextInput_Sample.swf Example] | Contributor: Darron Schall

==== ScrollableArrowMenu ====
An extension of !ScrollableMenu that uses two arrow buttons placed at the top and bottom of the menu for scrolling.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/controls/ScrollableArrowMenu.html Documentation] | [http://flexlib.googlecode.com/svn/trunk/examples/ScrollableMenu_Sample.swf Example] | Contributor: Doug !McCune

==== ScrollableMenu ====
An extension of mx.controls.Menu that allows the control to scroll vertically.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/controls/ScrollableMenu.html Documentation] |
[http://flexlib.googlecode.com/svn/trunk/examples/ScrollableMenu_Sample.swf Example] | Contributor: Doug !McCune

==== ScrollableMenuBar ====
!ScrollableMenuBar is an extension of !MenuBar that uses flexlib.controls.!ScrollableMenu  instead of using the original mx.controls.Menu. This allows us to specify a maxHeight for the !ScrollableMenuBar and that maxHeight will be used to determine the maxHeight for all the menus that the component generates.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/controls/ScrollableMenuBar.html Documentation] | 
[http://flexlib.googlecode.com/svn/trunk/examples/ScrollableMenu_Sample.swf Example] | Contributor: Doug !McCune

==== ScrollablePopUpMenuButton ====
!ScrollablePopUpMenuButton is an extension of !PopUpMenuButton that uses flexlib.controls.!ScrollableMenu  instead of using the original mx.controls.Menu, which adds scrolling functionality to the menu.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/controls/ScrollablePopUpMenuButton.html Documentation] |
[http://flexlib.googlecode.com/svn/trunk/examples/ScrollableMenu_Sample.swf Example] | Contributor: Doug !McCune

==== SuperTabBar ====
The !SuperTabBar control extends the !TabBar control and adds drag and drop functionality and closable tabs. Used by the !SuperTabNavigator.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/controls/SuperTabBar.html Documentation] | 
[http://flexlib.googlecode.com/svn/trunk/examples/SuperTabNavigator_Sample.swf Example] | Contributor: Doug !McCune

==== TreeGrid ====
A control that combines the functionality of the Tree component and the !DataGrid component.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/controls/TreeGrid.html Documentation] | [http://flexlib.googlecode.com/svn/trunk/examples/TreeGrid_Sample.swf Example] | Contributor: Yaniv De Ridder

==== VerticalMenuBar ====
A !VerticalMenuBar control defines a vertical, top-level menu bar that contains one or menu items, just like the horizontal !MenuBar control.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/controls/VerticalMenuBar.html Documentation] | [http://flexlib.googlecode.com/svn/trunk/examples/VerticalMenu_Sample.swf Example]
Contributor: Doug !McCune

== package: flexlib.containers ==

==== AdvancedForm ====
The Advanced Form component provides Reset, Undo and Redo functionality. Undo and Redo are accessed by pressing "ctrl-Z" and "ctrl-Y" respectively.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/containers/AdvancedForm.html Documentation] |
[http://flexlib.googlecode.com/svn/trunk/examples/AdvancedForm_Sample.swf Example] | Contributor: Renaun Erickson

==== ButtonScrollingCanvas ====
This is a Container component that uses buttons placed over the edges of the container to do the scrolling of its children. These buttons can either scroll the children when the user moves the mouse over them, or via mouse click. The buttons can be fully skinned.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/containers/ButtonScrollingCanvas.html Documentation] |
[http://flexlib.googlecode.com/svn/trunk/examples/DragCanvas_Sample.swf Example] | Contributor: Doug !McCune

==== Docking ToolBar ====
The docking toolbar component collectively helps managing toolbars in an application. The toolbars can be docked to the top or bottom edges or kept floating within application area. The contents within a toolbar use a flow based layout approach.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/containers/Docker.html Documentation] | [http://flexlib.googlecode.com/svn/trunk/examples/MultipleDockingToolBars_Sample.swf Example] | Contributor: Adobe Flex Team (Bangalore)

==== DragScrollingCanvas ====
This is a Container component that allows the user to drag the contents to scroll the children, instead of or in addition to using the scrollbars.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/containers/DragScrollingCanvas.html Documentation] |
[http://flexlib.googlecode.com/svn/trunk/examples/DragCanvas_Sample.swf Example] | Contributor: Doug !McCune

==== HAccordion ====
A Horizontal Accordion component. Works exactly like the normal Accordion component, except the item headers are rotated and they cascade from left to right, instead of top to bottom.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/containers/HAccordion.html Documentation] |
[http://flexlib.googlecode.com/svn/trunk/examples/HAccordion_Sample.swf Example] | Contributor: Doug !McCune

==== FlowBox ====
The !FlowBox is an extension of Box that implements a FlowLayout algorithm for layout out children.  FlowBox will position children in a horizontal fashion.  When the width of
the child exceeds the width of the container, the child is placed on a new row.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/containers/FlowBox.html Documentation] |
[http://flexlib.googlecode.com/svn/trunk/examples/FlowBox_Sample.swf Example] | Contributor: Darron Schall

==== SuperTabNavigator ====
The !SuperTabNavigator is an extension of the !TabNavigator navigation container. It functions exactly like the TabNavigator, but adds some functionality. Added functionality includes: 1. Draggable, re-orderable tabs, 2. Closable tabs, 3. Scrolling tab bar if too many tabs are open, 4. Drop-down list of tabs

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/containers/SuperTabNavigator.html Documentation] |
[http://flexlib.googlecode.com/svn/trunk/examples/SuperTabNavigator_Sample.swf Example] | Contributor: Doug !McCune


==== WindowShade ====
The !WindowShade is a container that displays a header button, which when clicked, will cause a panel to "unroll" beneath it like a windowshade being pulled down; or if the panel is already displayed it will be "rolled up" like a windowshade being rolled up. 

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/containers/WindowShade.html Documentation] |
[http://flexlib.googlecode.com/svn/trunk/examples/WindowShade_Sample.swf Example] | Contributor: Dave Glasser, Doug !McCune

== package: flexlib.charts ==

=== DraggablePie ===
The !DraggablePie is a chart a pie chart where each wedge is draggable the user.  It is used so that users can manipulate the data displayed in a pie chart.  The pie chart can be configured to dispatch changes while dragging, or when the dragging is complete.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/charts/DraggablePie.html Documentation] |
[http://flexlib.googlecode.com/svn/trunk/examples/DraggablePie_Sample.swf Example] | Contributor: Billy Schoenberg

==== HorizontalAxisDataSelector ====
The !HorizontalAxisDataSelector is a chart annotation that allows the user to select a value along the x axis of the chart.  The selector dispatches a change event with the values of each of the y values of the chart series at the given x axis location.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/charts/HorizontalAxisDataSelector.html Documentation] |
[http://flexlib.googlecode.com/svn/trunk/examples/HorizontalAxisDataSelector_Sample.swf Example] | Contributor: Darron Schall

== package: flexlib.skins ==

==== EnhancedButtonSkin ====
This is the enhanced version of the Halo ButtonSkin that has been customized to support four numeric values in the corner, a more configurable border, and also a large number of colors in the gradient, individually specified for up, over, etc states.

[http://flexlib.googlecode.com/svn/trunk/docs/flexlib/skins/EnhancedButtonSkin.html Documentation] | [http://flexlib.googlecode.com/svn/trunk/examples/EnhancedButton_Sample.swf Example] | Contributor: Daniel Wabyick

== package: flexlib.scheduling ==
Put some better Scheduling Framework documentation here, or put a link to a separate wiki page?

Original Adobe Labs [http://labs.adobe.com/wiki/index.php/Flex_Scheduling_Framework wiki entry]

[http://flexlib.googlecode.com/svn/trunk/docs/index.html?flexlib/scheduling/package-detail.html&flexlib/scheduling/class-list.html Documentation] | Example 1 [http://flexlib.googlecode.com/svn/trunk/examples/ScheduleViewer1_Sample.swf   demo] [http://code.google.com/p/flexlib/source/browse/trunk/examples/flex3/SchedulingFramework/ScheduleViewer1_Sample.mxml source] | Example 2
[http://flexlib.googlecode.com/svn/trunk/examples/ScheduleViewer2_Sample.swf  demo] [http://code.google.com/p/flexlib/source/browse/trunk/examples/flex3/SchedulingFramework/ScheduleViewer2_Sample.mxml source]  | Example 3
[http://flexlib.googlecode.com/svn/trunk/examples/ScheduleViewer3_Sample.swf  demo] [http://code.google.com/p/flexlib/source/browse/trunk/examples/flex3/SchedulingFramework/ScheduleViewer3_Sample.mxml source]  | Example 4
[http://flexlib.googlecode.com/svn/trunk/examples/ScheduleViewer4_Sample.swf  demo] [http://code.google.com/p/flexlib/source/browse/trunk/examples/flex3/SchedulingFramework/ScheduleViewer4_Sample.mxml source]  | Example 6
[http://flexlib.googlecode.com/svn/trunk/examples/ScheduleViewer6_Sample.swf  demo]  [http://code.google.com/p/flexlib/source/browse/trunk/examples/flex3/SchedulingFramework/ScheduleViewer6_Sample.mxml source] | Example 7
[http://flexlib.googlecode.com/svn/trunk/examples/ScheduleViewer7_Sample.swf  demo]  [http://code.google.com/p/flexlib/source/browse/trunk/examples/flex3/SchedulingFramework/ScheduleViewer7_Sample.mxml source] | Contributor: Adobe Consulting, Wim Roelens
Contributor: Adobe Consulting
 